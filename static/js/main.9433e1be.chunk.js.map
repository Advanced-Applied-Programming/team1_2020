{"version":3,"sources":["components/feed/feed.js","components/uplift.js","components/protest.js","components/action.js","components/404.js","theme.js","components/navbar.js","components/about.js","App.js","serviceWorker.js","index.js"],"names":["Feed","Container","style","textAlign","Component","Uplift","Protest","Action","NotFound","palette","primary","main","contrastText","secondary","themeName","makeComponentFromTheme","newComponent","newPalette","newThemeName","ThemeProvider","theme","createMuiTheme","flexGrow","AppBar","color","position","Toolbar","ListItem","to","textDecoration","Avatar","alt","src","List","ListItemText","Typography","variant","inset","About","App","basename","process","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9433e1be.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Container } from '@material-ui/core';\r\n\r\n\r\nexport class Feed extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <h1 style={{textAlign: 'center'}}>Feed Page</h1>\r\n          Combine multiple social media posts pertaining to the Black Lives Matter topic into one web application \r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Feed\r\n","import React, { Component } from 'react'\r\nimport { Container } from '@material-ui/core';\r\n\r\n\r\nexport class Uplift extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <h1 style={{textAlign: 'center'}}>Uplift Page</h1>\r\n          Black people talking about and black people achievements: Ideas, businesses, apps, etc. <br/>\r\n          Encourage positivity within the black community <br/>\r\n          Can also sign up for positive affirmations to be sent to you(chat bot or texting platform)? <br/>\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Uplift\r\n","import React, { Component } from 'react'\r\nimport { Container } from '@material-ui/core';\r\n\r\n\r\nexport class Protest extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <h1 style={{textAlign: 'center'}}>Protest Page</h1>\r\n          App or chat bot or website <br/>\r\n          Text/input locations and return nearby protests <br/>\r\n          Could also offer advice on keeping safe  <br/>\r\n          And maybe text you live updates <br/>\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Protest\r\n","import React, { Component } from 'react'\r\nimport { Container } from '@material-ui/core';\r\n\r\n\r\nexport class Action extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <h1 style={{textAlign: 'center'}}>Action Page</h1>\r\n          Citizens dashboard that allows users to see all their representatives, budgets, pending legislation at the national, state, county and city level <br/>\r\n          Users will be able to see the funding for programs <br/>\r\n          Users will be able to contact their representatives easily <br/>\r\n          Users will be able to see polling locations for primaries, general elections and run-offs <br/>\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Action\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1>Page not found :(</h1>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// Generated from https://react-theming.github.io/create-mui-theme/\r\nvar palette = {\r\n  primary: { main: '#000000', contrastText: '#FFC107' },\r\n  secondary: { main: '#FFC107' }\r\n};\r\nvar themeName = 'BLM_Theme';\r\n\r\n\r\n// Applies the theme on the component passed in based on the palette provided\r\nexport default function makeComponentFromTheme (newComponent, newPalette=palette, newThemeName=themeName) {\r\n  palette = newPalette;\r\n  themeName = newThemeName;\r\n  return () => {\r\n    return (\r\n      <ThemeProvider theme={createMuiTheme({ palette, themeName })}>{newComponent}</ThemeProvider>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { AppBar, Avatar, Toolbar, Typography }  from '@material-ui/core'\r\nimport { List, ListItem, ListItemText } from '@material-ui/core'\r\nimport makeComponentFromTheme from '../theme'\r\n\r\n\r\nconst NavBar = () => {\r\n  return(\r\n    <div style={{flexGrow: '1'}}>\r\n      <AppBar color=\"primary\" position=\"static\">\r\n        <Toolbar>\r\n          <ListItem >\r\n            <Link to=\"/about\" style={{ color: 'inherit', textDecoration: 'inherit' }} >\r\n              <Avatar alt=\"About\" src=\"img/logo_inverted.png\" />\r\n            </Link>\r\n          </ListItem >\r\n          \r\n          <List >\r\n            <ListItem >\r\n              <ListItemText>\r\n                <Typography color=\"inherit\" variant=\"button\">\r\n                  <Link to=\"/\" style={{ color: 'inherit', textDecoration: 'inherit' }} >\r\n                    Feed\r\n                  </Link>\r\n                </Typography>\r\n              </ListItemText>\r\n\r\n              <ListItemText inset>\r\n                <Typography color=\"inherit\" variant=\"button\">\r\n                  <Link to=\"/action\" style={{ color: 'inherit', textDecoration: 'inherit' }} >\r\n                    Action\r\n                  </Link>\r\n                </Typography>\r\n              </ListItemText>\r\n\r\n              <ListItemText inset>\r\n                <Typography color=\"inherit\" variant=\"button\">\r\n                  <Link to=\"/protest\" style={{ color: 'inherit', textDecoration: 'inherit' }} >\r\n                    Protest\r\n                  </Link>\r\n                </Typography>\r\n              </ListItemText>\r\n\r\n              <ListItemText inset>\r\n                <Typography color=\"inherit\" variant=\"button\">\r\n                  <Link to=\"/uplift\" style={{ color: 'inherit', textDecoration: 'inherit' }} >\r\n                    Uplift\r\n                  </Link>\r\n                </Typography>\r\n              </ListItemText>                \r\n            </ListItem >\r\n          </List>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default makeComponentFromTheme(NavBar());","import React from 'react'\r\nimport { Container } from '@material-ui/core';\r\n\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <h1 style={{textAlign: 'center'}}>About Page</h1>\r\n        // TODO\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default About\r\n","import React from 'react';\r\nimport { Switch, Route, BrowserRouter } from 'react-router-dom'\r\nimport Feed from './components/feed/feed'\r\nimport Uplift from './components/uplift'\r\nimport Protest from './components/protest'\r\nimport Action from './components/action'\r\nimport NotFound from './components/404'\r\nimport Navbar from './components/navbar'\r\nimport About from './components/about'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path='/'     component={Feed} />\r\n        <Route path='/action'     component={Action} />\r\n        <Route path='/protest'    component={Protest} />\r\n        <Route path='/uplift'     component={Uplift} />\r\n        <Route path='/about'      component={About} />\r\n        <Route                    component={NotFound} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\n\r\nexport default App","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}